%
% This is file `cistercian.sty',
% generated with the docstrip utility.
%
% The original source files were:
%
% cistercian.dtx  (with options: `package')
% 
% -------------------------------------------------------------------
% 
% The cistercian package
% A package for using Cistercian numerals in latex
% 
% -------------------------------------------------------------------
% 

\ProvidesPackage{cistercian}[2021/04/28 v0.1 Cistercian numerals]

\RequirePackage{tikz}

\newcommand{\cistercian@height}{1.5ex}%
\newcommand{\cistercian@width}{0.5ex}%
\newcommand{\cistercian@stroke}{0.1ex}%

%% #1: optional arguments to be passed to the tikzpicture
%% #2: number to be displayed
\newcommand{\cistercian}[2][]{%
  \ifnum#2<10000
  \unless\ifnum#2<0
    \begin{tikzpicture}[#1]%
      %
      % store scaling factor
      \pgfgettransformentries{\tmpscaleA}{\tmpscaleB}{\tmpscaleC}{\tmpscaleD}{\tmp}{\tmp}%
      \pgfmathsetmacro{\cistercian@scalingfactor}{sqrt(abs(\tmpscaleA*\tmpscaleD-\tmpscaleB*\tmpscaleC))*sqrt(abs((\pgf@xx/1cm)*(\pgf@yy/1cm)-(\pgf@xy/1cm)*(\pgf@yx/1cm)))}%
      %
      % ones
      \pgfmathparse{int(mod(#2,10)}
      \let\cistercian@ones\pgfmathresult
      %
      % tens
      \pgfmathparse{int((mod(#2,100)-mod(#2,10))/10)}
      \let\cistercian@tens\pgfmathresult
      %
      % hundreds
      \pgfmathparse{int((mod(#2,1000)-mod(#2,100))/100)}
      \let\cistercian@hundreds\pgfmathresult
      %
      % thousands
      \pgfmathparse{int((mod(#2,10000)-mod(#2,1000))/1000)}
      \let\cistercian@thousands\pgfmathresult
      %
      % superimposing the digts by mirroring
      \cistercian@digit{\cistercian@ones}{\cistercian@tens}
      \cistercian@digit[xscale=-1]{\cistercian@tens}{\cistercian@ones}
      \cistercian@digit[yscale=-1,yshift=-\cistercian@height]{\cistercian@hundreds}{\cistercian@thousands}
      \cistercian@digit[xscale=-1,yscale=-1,yshift=-\cistercian@height]{\cistercian@thousands}{\cistercian@hundreds}
    \end{tikzpicture}%
  \fi\fi%
}

%% #1: optional arguments for mirroring the digit
%% #2: the digit to be printed
%% #3: digit on the other site of the stem (to handle edge cases of line joints)
\newcommand{\cistercian@digit}[3][]{%
  % making sure all numerals have the same width
  \path[#1,line width=\cistercian@scalingfactor*\cistercian@stroke] (0,0) -- (\cistercian@width,0);
  % drawing the stem for zero
  \draw[#1,line width=\cistercian@scalingfactor*\cistercian@stroke] (0,0) -- ++(0,\cistercian@height)
  % adding features depending in the digit
  \ifnum1=#2%
    -- ++(\cistercian@width,0)
  \fi%
  \ifnum2=#2%
    ++(0,-\cistercian@width) -- ++(\cistercian@width,0)
  \fi%
  \ifnum3=#2%
    % several special case to make sure the line joints with the other site of the number look nice
    \ifnum3=#3%
      ++(-\cistercian@width,-\cistercian@width) -- ++(\cistercian@width,\cistercian@width)
    \fi
    \ifnum1=#3%
      ++(-\cistercian@width,0) -- ++(\cistercian@width,0)
    \fi
    \ifnum5=#3%
      ++(-\cistercian@width,0) -- ++(\cistercian@width,0)
    \fi
    \ifnum7=#3%
      ++(-\cistercian@width,0) -- ++(\cistercian@width,0)
    \fi
    \ifnum9=#3%
      ++(-\cistercian@width,0) -- ++(\cistercian@width,0)
    \fi
    -- ++(\cistercian@width,-\cistercian@width)
  \fi%
  \ifnum4=#2%
    ++(0ex,-\cistercian@width) -- ++(\cistercian@width,\cistercian@width)
  \fi%
  \ifnum5=#2%
    -- ++(\cistercian@width,0ex) -- ++(-\cistercian@width,-\cistercian@width)
  \fi%
  \ifnum6=#2%
    ++(\cistercian@width,0ex) -- ++(0ex,-\cistercian@width)
  \fi%
  \ifnum7=#2%
    --  ++(\cistercian@width,0ex) -- ++(0,-\cistercian@width)
  \fi%
  \ifnum8=#2%
    ++(0,-\cistercian@width) -- ++(\cistercian@width,0) -- ++(0,\cistercian@width)
  \fi%
  \ifnum9=#2%
    --  ++(\cistercian@width,0ex) -- ++(0,-\cistercian@width) -- ++(-\cistercian@width,0)
  \fi%
  ;
}
\endinput
%%
%% End of file `cistercian.sty'.
